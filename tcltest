#!/bin/bash

# Define variables
WORK_DIR=`pwd`
SERVER_HOST=127.0.0.1
SERVER_PORT=7379
SERVER_CMD="air"
TEST_CMD="./runtest --host $SERVER_HOST --port $SERVER_PORT --tags -needs:debug --tags -cluster:skip"
SERVER_PID_FILE="$WORK_DIR/server.pid"
PATCH_DIR="dice-patch"
PATCH_FILE_NAME="tcltest.patch"
ABS_PATH_PATCH_FILE="$WORK_DIR/$PATCH_DIR/$PATCH_FILE_NAME"

# Check if directory path is passed as an argument
if [ -z "$1" ]; then
  echo "Error: No directory path provided."
  exit 1
fi

# Check if the directory exists
if [ ! -d "$1" ]; then
  echo "Error: Directory '$1' does not exist."
  exit 1
fi

# Navigate to the provided directory
cd "$1" || exit

# Apply patch
git apply $ABS_PATH_PATCH_FILE
if [ $? -eq 0 ]; then
    echo "Patch applied successfully"
else
    echo "Patch apply failed. Aborting...."
    exit 1
fi

# Start the Go server in the background
echo "Starting the server..."
# Enable TCL_TESTS
export TCL_TESTS=true
# Check if the 'air' command exists
if ! command -v air &> /dev/null; then
  echo "'air' command not found, running 'go run main.go' instead..."
  go run main.go &
  SERVER_PID=$!
else
  echo "'air' command found, running 'air'..."
  $SERVER_CMD &
  SERVER_PID=$!
fi

# Switch back to origin dir after starting server
cd $WORK_DIR

# Save the server PID to a file for later use
echo $SERVER_PID > $SERVER_PID_FILE
cat $SERVER_PID_FILE

# Wait for the server to start
echo "Waiting for the server to start..."
sleep 5  # Adjust this sleep duration based on how long the server takes to start

# Run the tests
echo "Running tests..."
$TEST_CMD

# Capture the exit code of the test command
if [ $? -eq 0 ]; then
    echo "Test execution successful."
else
    echo "Test execution failed."
fi

# Stop the server
echo "Stopping the server..."
kill $SERVER_PID

# Remove the server PID file
rm -f $SERVER_PID_FILE

# Exit with the same code as the test command
exit 0
